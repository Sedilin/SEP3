@page "/CreateUser"
@using Domain.DTOs
@using HttpClients.ClientInterfaces
@inject IUserService userService;

<div class="card" style="width:400px">
  <img class="card-img-top" src="icons/log-in.png" alt="Card image">
  <div class="card-body">
    <h4 class="card-title">Register</h4>
      <p class="card-text">Create a profile.</p>
      <div class="row-cols-auto content  clearfix align-content-center">
              <label>Username:</label>
              <input type="text" @bind="userName" @bind:event="oninput"/>
            
          </div>
          <div class="row-cols-auto content clearfix align-content-center">
              <label> Password:</label>
              <input type="text" @bind="password" @bind:event="oninput"/>
          </div>
          <div class="button-row">
              <button @onclick="Create" disabled="@(string.IsNullOrEmpty(userName) || (string.IsNullOrEmpty(password)))" class="acceptbtn">Create</button>
          </div>
  </div> 
  @if (!string.IsNullOrEmpty(resultMsg))
  {
      <label style="color: @color">@resultMsg</label>
  }
  </div>


@code {
    private string userName = "";
    private string password = "";
    private string resultMsg = "";
    private string color = "";
    
    private async Task Create()
    {
        resultMsg = "";

        try
        {
            Console.WriteLine("here");
            await userService.Create(new UserCreationDto(userName, password, securityLevel:4));
            userName = "";
            password = "";
            resultMsg = "User successfully created";
            color = "green";
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            resultMsg = e.Message;
            color = "red";
        }
    }
}